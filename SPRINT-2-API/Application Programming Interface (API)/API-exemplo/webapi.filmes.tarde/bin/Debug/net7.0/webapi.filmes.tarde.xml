<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="T:webapi.filmes.tarde.Controller.FilmeController">
            <summary>
            Define que a rota de requisicao sera no seguinte formato
            Dominiio/api/nomeController
            Example: http://localhost:5000/api/Filme
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.Get">
            <summary>
            Endpoint para acessar o método de listar filmes
            </summary>
            <returns>lista de generos com status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.Delete(System.Int32)">
            <summary>
            Endpoint para o método deletar filme por id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.GetById(System.Int32)">
            <summary>
            Endpoint para o método buscar filme por id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.Post(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint para o cadastrar um novo filme
            </summary>
            <param name="novoFilme"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.PutIdBody(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint para o método atualizar filme pelo corpo
            </summary>
            <param name="filme"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.FilmeController.PutById(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint para o método atualizar o filme pela URL
            </summary>
            <param name="id"></param>
            <param name="filme"></param>
            <returns></returns>
        </member>
        <member name="T:webapi.filmes.tarde.Controller.GeneroController">
            <summary>
            Define que a rota de requisicao sera no seguinte formato
            Dominiio/api/nomeController
            Example: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controller.GeneroController._generoRepository">
            <summary>
            objeto que ira receber os metodos definidos na interface (referencia a interface)
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.#ctor">
            <summary>
            instancia do objeto _generoRepository para que haja referencia aos metodos no repositorio
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.Get">
            <summary>
            Endpoint que acessa o método de listar os generos
            </summary>
            <returns>Lista de generos com status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.Post(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint para o método cadastrar genero
            </summary>
            <param name="novoGenero">objeto recebid na aquisição</param>
            <returns>status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.PutIdBody(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint para o método atualizar genero
            </summary>
            <param name="genero"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.Delete(System.Int32)">
            <summary>
            Endpoint para o método deletar genero por id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.GetById(System.Int32)">
            <summary>
            Endpoint para o método buscar genero por id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controller.GeneroController.PutById(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint para o método atualizar genero por id
            </summary>
            <param name="id"></param>
            <param name="genero"></param>
            <returns></returns>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Classe que representa a entidade(tabela) Filme
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade (tabela) Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.GeneroDomain.Nome">
            <summary>
            Data Annotation
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.UsuarioDomain">
            <summary>
            Classe que representa a entidade usuario
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.Email">
            <summary>
            Data Annotation
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.Senha">
            <summary>
            Data Annotation
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.Permissao">
            <summary>
            Data Annotation
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastrar um novo filme
            </summary>
            <param name="novoFilme">Esse parametro é o parametro que sera cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.ListarTodos">
            <summary>
            Retornar todos os filmes cadastrados
            </summary>
            <returns>Lista de filmes</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto atraves de seu id
            </summary>
            <param name="id">id do objeto que sera buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme existente passando o id pelo corpo d requisicao
            </summary>
            <param name="filme">objeto com novas informacoes</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um genero existente passando o id pela URL da requisicao
            </summary>
            <param name="id">id do objeto a ser atualizado</param>
            <param name="filme">Objeto com as novas informacoes</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IFilmeRepository.Deletar(System.Int32)">
            <summary>
            Deletar um filme existente
            </summary>
            <param name="id">Id do objeto a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Interface.IGeneroRepository">
            <summary>
            Interface responsalvel pelo repositorio genero
            
            Define os metodos que serao implementados pelo repositorio
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo genero
            </summary>
            <param name="novoGenero">Esse parametro é o objeto que sera cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.ListarTodos">
            <summary>
            Retornar todos os Generos cadastrados
            </summary>
            <returns>Lista de generos</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto atraves do seu Id
            </summary>
            <param name="id">Id do objeto que sera buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um genero existente passando o id pelo corpo d requisicao
            </summary>
            <param name="genero">Objeto com as novas informacoes</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um genero existente passando o id pela URL da requisicao
            </summary>
            <param name="id">id do objeto a ser atualizado</param>
            <param name="genero">Objeto com as novas informacoes</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um genero existente
            </summary>
            <param name="id">Id do objeto a ser deletado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interface.IUsuarioRepository.Login(System.String,System.String)">
            <summary>
            metodo que busca um usuario por email e senha
            </summary>
            <param name="email">email usuario</param>
            <param name="senha">senha usuario</param>
            <returns>objeto que foi buscado</returns>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.FilmeRepository.StringConexao">
            <summary>
            String de conexao com o BD, passando nome do servidor, nome do BD, id do user e senha do BD
            Data Source = Nome servidor
            Initial Catalog = Nome do BD
            Autenticacao:
                -Windows : Integrated Security = True
                -SQLServer :
                User id = Nome do usuario
                Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.ListarTodos">
            <summary>
            Metodo para listar todos os objetos do tipo filme
            </summary>
            <returns>Lista de objetos do tipo de filme</returns>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.GeneroRepository.StringConexao">
            <summary>
            String de conexao com o BD, passando nome do servidor, nome do BD, id do user e senha do BD
            Data Source = Nome servidor
            Initial Catalog = Nome do BD
            Autenticacao:
                -Windows : Integrated Security = True
                -SQLServer :
                User id = Nome do usuario
                Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            buscar genero por id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            cadastrar um novo genero
            </summary>
            <param name="novoGenero">objeto com as informacoes que serao cadastradas</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Metodo para listar todos os objetos do tipo genero
            </summary>
            <returns>Lista de objetos do tipo de genero</returns>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.UsuarioRepository.StringConexao">
            <summary>
            string de conexao
            </summary>
        </member>
    </members>
</doc>
